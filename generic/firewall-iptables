#!/bin/bash -ex
# written 2016-01-04 by mza
# updated 2016-01-05
# updated 2017-06-14

# dport 7 = echo
# dport 22 = ssh
# dport 111 = sunrpc/idmap
# dport 2049 = nfsd
# dport 2987 = identify
# dport 5353 = mdns
# dport 20048 = mountd

function watch_for_brute_force_ssh_attack {
	sudo iptables -F SSHATTACK | /bin/true
	sudo iptables -N SSHATTACK | /bin/true
	sudo iptables -A SSHATTACK -j LOG --log-prefix "SSH brute-force attack?: " --log-level 4
	sudo iptables -A SSHATTACK -j DROP
	sudo iptables -A INPUT -p tcp -m state --dport ssh --state NEW -m recent --set
	sudo iptables -A INPUT -p tcp -m state --dport ssh --state NEW -m recent --update --seconds 120 --hitcount 4 -j SSHATTACK
}

function accept_nfs_mounts_from {
	sudo iptables -A INPUT -s $1 -p tcp --dport sunrpc -j ACCEPT # accept incoming sunrpc/idmap (dport 111)
	sudo iptables -A INPUT -s $1 -p udp --dport sunrpc -j ACCEPT # accept incoming sunrpc/idmap (dport 111)
	sudo iptables -A INPUT -s $1 -p tcp --dport mountd -j ACCEPT # accept incoming mountd (dport 20048)
	sudo iptables -A INPUT -s $1 -p udp --dport mountd -j ACCEPT # accept incoming mountd (dport 20048)
	sudo iptables -A INPUT -s $1 -p tcp --dport nfsd -j ACCEPT # accept incoming nfsd (dport 2049)
}

function setup_basic_rules_and_watch_for_brute_force_ssh_attack {
	#sudo iptables -P INPUT ACCEPT
	sudo iptables -F # flush rules
	sudo iptables -P INPUT DROP # deny incoming traffic by default
	sudo iptables -P FORWARD DROP # deny routing traffic by default
	sudo iptables -P OUTPUT ACCEPT # accept outgoing traffic by default
	sudo iptables -A INPUT -i lo -j ACCEPT # allow localhost interface
	watch_for_brute_force_ssh_attack # this must come before the tcp 22 ssh accept line below
	sudo iptables -A INPUT -p tcp --dport ssh -j ACCEPT # accept incoming ssh (dport 22)
#	sudo iptables -A INPUT -i lo -p tcp --dport smtp -j ACCEPT # accept incoming mail/smtp (dport 25)
#	sudo iptables -A INPUT -s 192.168.153.0/24 -p tcp --dport smtp -j ACCEPT # accept incoming mail/smtp (dport 25)
	sudo iptables -A INPUT -s 192.168.153.0/24 -p icmp -m icmp --icmp-type 8 -j ACCEPT # respond to pings (icmp echo-reply)
	sudo iptables -A INPUT -s 192.168.153.0/24 -p tcp --dport http -j ACCEPT # accept incoming web/http (dport 80)
#	sudo iptables -A INPUT -s 192.168.153.0/24 -p tcp --dport https -j ACCEPT # accept incoming web/https (dport 443)
	sudo iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT # keep track of state and allow traffic for connections related to existing traffic
	# should that be "-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT" instead?
}

function ignore_echo_port7 {
	local source=""
	if [ ! -z "$1" ]; then
		source="-s $1"
	fi
	sudo iptables -A INPUT $source -p udp --dport 7    -j DROP # silently ignore the frequent requests to port 7 (dpt:echo)
}

function ignore_identify_port2987 {
	local source=""
	if [ ! -z "$1" ]; then
		source="-s $1"
	fi
	sudo iptables -A INPUT $source -p tcp --dport 2987 -j DROP # silently ignore the frequent requests to port 2987 (dpt:identify)
}

function ignore_mdns_port5353 {
	sudo iptables -A INPUT -p udp --dport 5353 -j DROP # silently ignore these frequent requests to port 5353 (dpt:mdns)
}

function ignore_broadcast_traffic {
	sudo iptables -A INPUT -m pkttype --pkt-type broadcast -j DROP # ignore random broadcast traffic; this rule saves a ton of logfile space
}

function allow_sport61376 {
	sudo iptables -A INPUT -s 128.171.30.203 -p tcp --sport 61376 -j ACCEPT # accept incoming traffic from source port 61376
}

function log_all_denied_traffic {
	sudo iptables -F DROPLOG | /bin/true
	sudo iptables -N DROPLOG | /bin/true
	sudo iptables -A DROPLOG -p tcp  -m limit --limit 5/min -j LOG --log-prefix "Denied TCP: "  --log-level 4
	sudo iptables -A DROPLOG -p udp  -m limit --limit 5/min -j LOG --log-prefix "Denied UDP: "  --log-level 4
	sudo iptables -A DROPLOG -p icmp -m limit --limit 5/min -j LOG --log-prefix "Denied ICMP: " --log-level 4
	sudo iptables -A DROPLOG -j DROP
	sudo iptables -A INPUT -j DROPLOG
}

function show_rules {
	sudo iptables --list -v
}

function save_rules {
	sudo service iptables save # save to /etc/sysconfig/iptables
}

#show_rules
setup_basic_rules_and_watch_for_brute_force_ssh_attack
#allow_sport61376
accept_nfs_mounts_from 192.168.153.10
ignore_echo_port7 192.168.153.53
ignore_identify_port2987 192.168.153.53
ignore_mdns_port5353
ignore_broadcast_traffic
log_all_denied_traffic 
show_rules
save_rules

