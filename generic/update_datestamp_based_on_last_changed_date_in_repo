#!/bin/bash -e

# written 2016-04-28 by mza
# to remedy the fact that svn checkout does not make file datestamps reflect
# the time the file was committed...
# 2016-08-26:  discovered that uncommenting the "use-commit-times = yes" line
# in ~/.subversion/config effectively makes this script obsolete
# (except for already-checked-out working copies, and for git repos)
# 2016-08-31: re-organized code to only explore an entire dirtree if no arguments are given
#             also now auto-detects git or svn
#             also now changes datestamps of dirs

# format of svn info is:
# Last Changed Date: 2015-01-16 20:56:54 -1000 (Fri, 16 Jan 2015)

# git format is:
# Date:   Fri Jun 17 07:36:46 2016 +0900
# touch doesn't like the +9000 on the end...

# for filenames with "@" in them, svn info will interpret them as revision
# indicators, so the trick is to append @ to every filename to avoid this
# from http://stackoverflow.com/questions/3511348/how-to-remove-a-file-with-in-its-name-from-svn-in-command-line

function determine_git_or_svn {
	# mode can come from output status of:
	# git log --max-count 1; echo $?
	# or
	# svn info; echo $?
	svn info "$1" >/dev/null 2>&1 || /bin/true
	#svn info "$1" || /bin/true
	if [ $? -eq 0 ]; then
		#echo "changing GITORSVN to svn"
		GITORSVN="svn"
	else
		git log --max-count 1 "$1" >/dev/null 2>&1 || /bin/true
		#git log --max-count 1 "$1" || /bin/true
		if [ $? -eq 0 ]; then
			GITORSVN="git"
			#echo "changing GITORSVN to git"
		fi
	fi
	export GITORSVN
}

function do_dir_of_dirs {
	find -type d \( -name '.svn' -o -name '.git' \) -prune -o -type d -exec $0 {} +
}

function do_dir {
	find -maxdepth 1 -type d \( -name '.svn' -o -name '.git' \) -prune -o -type f -exec $0 {} +
}

function do_file {
	local date=""
	if [ "$GITORSVN" == "svn" ]; then
		date=$(svn info "$1@" 2>/dev/null | grep "Last Changed Date" | sed -e "s,^Last Changed Date: \(.*\),\1,")
	elif [ "$GITORSVN" == "git" ]; then
		date=$(git log --follow "$1" | grep '^Date' | sed -e "s,^Date:[[:space:]]*,," | sed -e "s, [+-][0-9]\{4\}$,," | head -n1)
	fi
	if [ ! -z "$date" ]; then
		touch --date="$date" $temp
		if [ "$1" -nt $temp ]; then
			echo "changing datestamp of \"$1\" to $date"
			touch --reference=$temp "$1"
		fi
	fi
}

if [ -z "$GITORSVN" ]; then
	#echo "setting initial value of GITORSVN to none"
	declare GITORSVN="none"
fi
declare temp=$(mktemp)
if [ $# -gt 0 ]; then
	for each; do
		if [ -d "$each" ]; then
			determine_git_or_svn "$each"
			do_file "$each"
			do_dir "$each"
		elif [ -f "$each" ]; then
			if [ "$GITORSVN" == "none" ]; then
				determine_git_or_svn "$each"
			fi
			do_file "$each"
		fi
	done
else
	do_dir_of_dirs
fi
rm $temp

