#!/bin/bash -e
# written 2018-03-09 by mza
# script to recursively unpack zip/tar archives (zips within tars within tar-bzips, etc)
# last updated 2022-03-26 by mza

declare overwrite="--keep-newer-files"
#declare overwrite="--keep-old-files"
declare find_format="%TY-%Tm-%Td+%TH:%TM %12s %p\n"

function go {
	find "$1" \( -iname "*.zip" -o -iname "*.tar" -o -iname "*.tgz" -o -iname "*.tar.gz" -o -iname "*.tar.bz2" -o -iname "*.rar" \) -exec $0 {} \;
}

if [ $# -gt 0 ]; then
	for each do
		base=$(basename "$each")
		dir=$(dirname "$each")
		if [ -e "$dir" ] && [ -d "$dir" ]; then
			cd "$dir"
			if [ -e "$base" ]; then
				nom=$(echo "$base" | sed -e "s,\(.*\)\(\.zip\|\.tar\|\.tgz\|\.tar\.gz\|\.tar\.bz2\|\.rar\)$,\1,")
				ext=$(echo "$base" | sed -e "s,\(.*\)\(\.zip\|\.tar\|\.tgz\|\.tar\.gz\|\.tar\.bz2\|\.rar\)$,\2,")
				echo "$(pwd)/$nom$ext"
				if [ "$ext" == ".zip" ]; then
					mkdir -p "$nom"
					unzip "$base" -d "$nom"
					go "$nom"
					find "$nom" -printf "${find_format}" | sort -n -k 1 > "$nom.lf-r"
					touch "$nom" "$nom.lf-r" --reference="$base"
				elif [ "$ext" == ".tar.bz2" ]; then
					mkdir -p "$nom"
					tar $overwrite -xjf "$base" -C $nom
					go "$nom"
					find "$nom" -printf "${find_format}" | sort -n -k 1 > "$nom.lf-r"
					touch "$nom" "$nom.lf-r" --reference="$base"
				elif [ "$ext" == ".tar.gz" ] || [ "$ext" == ".tgz" ]; then
					mkdir -p "$nom"
					tar $overwrite -xzf "$base" -C $nom
					go "$nom"
					find "$nom" -printf "${find_format}" | sort -n -k 1 > "$nom.lf-r"
					touch "$nom" "$nom.lf-r" --reference="$base"
				elif [ "$ext" == ".tar" ]; then
					mkdir -p "$nom"
					tar $overwrite -xf "$base" -C $nom
					go "$nom"
					find "$nom" -printf "${find_format}" | sort -n -k 1 > "$nom.lf-r"
					touch "$nom" "$nom.lf-r" --reference="$base"
				elif [ "$ext" == ".rar" ]; then
					mkdir -p "$nom"
					cd "$nom" && unrar x "../$base" && cd -
					go "$nom"
					find "$nom" -printf "${find_format}" | sort -n -k 1 > "$nom.lf-r"
					touch "$nom" "$nom.lf-r" --reference="$base"
				else
					echo "unknown file type for $each"
				fi
			else
				echo "file $nom not found"
			fi
			cd - >/dev/null
		fi
	done
else
	go .
fi

