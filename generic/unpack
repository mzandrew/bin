#!/bin/bash -e
# written 2018-03-09 by mza
# script to recursively unpack zip/tar archives (zips within tars within tar-bzips, etc)
# last updated 2025-01-30 by mza

#declare mode="overwrite_destination"
declare mode="do_not_overwrite_destination"

declare tar_overwrite="" # default behavior
declare zip_overwrite="" # default behavior
declare rar_overwrite="" # default behavior
if [ "$mode" == "overwrite_destination" ]; then
	zip_overwrite="-o" # overwrite what's already on disk
	rar_overwrite="-o+" # overwrite existing files
else
	zip_overwrite="-n" # never overwrite what's already on disk
	#tar_overwrite="--keep-old-files" # never overwrite what's already on disk; this mode will raise the errorlevel
	tar_overwrite="--keep-newer-files" # don't replace files on disk that are newer than those in archive
	rar_overwrite="-o-" # do not overwrite existing files
fi

declare find_format="%TY-%Tm-%Td+%TH:%TM %12s %p\n"

function go {
	find "$1" \( -iname "*.zip" -o -iname "*.tar" -o -iname "*.tgz" -o -iname "*.tar.gz" -o -iname "*.tar.xz" -o -iname "*.tar.bz2" -o -iname "*.rar" \) -exec $0 "{}" \;
}

if [ $# -gt 0 ]; then
	for each do
		base=$(basename "$each")
		dir=$(dirname "$each")
		if [ -e "$dir" ] && [ -d "$dir" ]; then
			cd "$dir"
			if [ -e "$base" ]; then
				nom=$(echo "$base" | sed -e "s,\(.*\)\(\.zip\|\.tar\|\.tgz\|\.tar\.xz\|\.tar\.gz\|\.tar\.bz2\|\.rar\)$,\1,i")
				ext=$(echo "$base" | sed -e "s,\(.*\)\(\.zip\|\.tar\|\.tgz\|\.tar\.xz\|\.tar\.gz\|\.tar\.bz2\|\.rar\)$,\2,i")
				echo; echo "$(pwd)/${nom}${ext}"
				if [ "${ext,,}" == ".zip" ]; then
					if [ ! -e "$nom" ] || [ "$mode" == "overwrite_destination" ]; then
						mkdir -p "$nom"
						unzip $zip_overwrite "$base" -d "$nom"
						rm -v "$base"
						go "$nom"
						#find "$nom" -printf "${find_format}" | sort -k1n > "$nom.lf-r"
						#touch "$nom" "$nom.lf-r" --reference="$base"
					else
						echo "\"$nom\" already exists or mode is set to \"$mode\""
					fi
				elif [ "${ext,,}" == ".tar.bz2" ]; then
					if [ ! -e "$nom" ] || [ "$mode" == "overwrite_destination" ]; then
						mkdir -p "$nom"
						tar $tar_overwrite -xvjf "$base" -C "$nom"
						rm -v "$base"
						go "$nom"
						#find "$nom" -printf "${find_format}" | sort -k1n > "$nom.lf-r"
						#touch "$nom" "$nom.lf-r" --reference="$base"
					else
						echo "\"$nom\" already exists or mode is set to \"$mode\""
					fi
				elif [ "${ext,,}" == ".tar.xz" ]; then
					if [ ! -e "$nom" ] || [ "$mode" == "overwrite_destination" ]; then
						mkdir -p "$nom"
						tar $tar_overwrite -xvZf "$base" -C "$nom"
						rm -v "$base"
						go "$nom"
						#find "$nom" -printf "${find_format}" | sort -k1n > "$nom.lf-r"
						#touch "$nom" "$nom.lf-r" --reference="$base"
					else
						echo "\"$nom\" already exists or mode is set to \"$mode\""
					fi
				elif [ "${ext,,}" == ".tar.gz" ] || [ "$ext" == ".tgz" ]; then
					if [ ! -e "$nom" ] || [ "$mode" == "overwrite_destination" ]; then
						mkdir -p "$nom"
						tar $tar_overwrite -xvzf "$base" -C "$nom"
						rm -v "$base"
						go "$nom"
						#find "$nom" -printf "${find_format}" | sort -k1n > "$nom.lf-r"
						#touch "$nom" "$nom.lf-r" --reference="$base"
					else
						echo "\"$nom\" already exists or mode is set to \"$mode\""
					fi
				elif [ "${ext,,}" == ".tar" ]; then
					if [ ! -e "$nom" ] || [ "$mode" == "overwrite_destination" ]; then
						mkdir -p "$nom"
						tar $tar_overwrite -xvf "$base" -C "$nom"
						rm -v "$base"
						go "$nom"
						#find "$nom" -printf "${find_format}" | sort -k1n > "$nom.lf-r"
						#touch "$nom" "$nom.lf-r" --reference="$base"
					else
						echo "\"$nom\" already exists or mode is set to \"$mode\""
					fi
				elif [ "${ext,,}" == ".rar" ]; then
					if [ ! -e "$nom" ] || [ "$mode" == "overwrite_destination" ]; then
						mkdir -p "$nom"
						cd "$nom" && unrar x $rar_overwrite "../$base" && cd -
						rm -v "$base"
						go "$nom"
						#find "$nom" -printf "${find_format}" | sort -k1n > "$nom.lf-r"
						#touch "$nom" "$nom.lf-r" --reference="$base"
					else
						echo "\"$nom\" already exists or mode is set to \"$mode\""
					fi
				else
					echo "unknown file type for $each"
				fi
			else
				echo "file \"$base\" not found"
			fi
			cd - >/dev/null
		fi
	done
else
	go .
fi

